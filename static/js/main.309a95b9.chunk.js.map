{"version":3,"sources":["assets/noPosterSmall.png","loading.gif","Components/Common/Section.js","Components/Common/Loader.js","Components/Common/Message.js","Components/Common/Poster.js","Routes/Home/HomePresenter.js","lib/api.js","Routes/Home/HomeContainer.js","Routes/Home/index.js","Routes/Search/SearchPresenter.js","Routes/Search/SearchContainer.js","Routes/Search/index.js","Routes/TV/TvPresenter.js","Routes/TV/TvContainer.js","Routes/TV/index.js","Routes/Detail/DetailPresenter.js","Routes/Detail/DetailContainer.js","Routes/Detail/index.js","Components/Router.js","Components/Common/Header.js","Components/Common/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Container","styled","div","Title","span","Grid","Section","title","children","Loader","role","aria-label","src","Loading","alt","Text","props","color","Message","text","console","log","Image","bgUrl","Rating","ImageContainer","Year","Poster","id","imageUrl","rating","year","isMovie","to","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","map","movie","key","poster_path","vote_average","release_date","api","axios","create","baseURL","params","api_key","language","movieApi","get","movieDetail","a","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","tvDetail","useState","setNowPlaying","setPopular","setUpcoming","setLoading","setError","useEffect","Api","nowplaying","data","results","fetchData","index","HomeContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","handleSubmit","searchTerm","updateTerm","onSubmit","placeholder","value","onChange","original_title","show","first_air_date","setMovieResults","setTvResults","setSearchTerm","searchByTerm","useCallback","movieResult","tvResult","event","target","e","preventDefault","undefined","SearchContainer","TvPresenter","original_name","setTopRated","setAiringToday","TvContainer","Backdrop","Bgimg","Content","Cover","Data","h3","ItemContainer","Item","Divider","Overview","p","DetailPresenter","result","name","backdrop_path","runtime","episode_run_time","genres","genre","overview","withRouter","history","location","match","push","pathname","setResult","setData","includes","showDetail","isNaN","parseInt","DetailContainer","exact","path","component","Home","TV","Search","Detail","from","Header","header","List","ul","li","current","StyledLink","Link","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.309a95b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","module.exports = __webpack_public_path__ + \"static/media/loading.3d035a55.gif\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n  :first-child {\r\n    margin-top: 15px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: bold;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 20px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap: 20px;\r\n  text-align: center;\r\n  /*   img {\r\n    width: 150px;\r\n    height: 150px;\r\n  }\r\n  span {\r\n    margin-top: 10px;\r\n    display: inline-block;\r\n  } */\r\n`;\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <Container>\r\n      <Title>{title}</Title>\r\n      <Grid>{children}</Grid>\r\n    </Container>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node,\r\n  ]),\r\n};\r\nexport default Section;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport Loading from \"../../loading.gif\";\r\n\r\nconst Container = styled.div`\r\n  height: 100vh;\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  img {\r\n    width: 50px;\r\n    height: 50px;\r\n  }\r\n`;\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Container>\r\n      <span role=\"img\" aria-label=\"Loading\">\r\n        <img src={Loading} alt=\"loading-icon\" />\r\n      </span>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  width: 100vw;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  color: ${(props) => props.color};\r\n`;\r\n\r\nconst Message = ({ text, color }) => {\r\n  console.log(\"색상\", color);\r\n\r\n  return (\r\n    <Container>\r\n      <Text color={color}>{text}</Text>\r\n    </Container>\r\n  );\r\n};\r\n\r\nMessage.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${(props) => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 10px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.5;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => {\r\n  return (\r\n    <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n      <Container>\r\n        <ImageContainer>\r\n          <Image\r\n            bgUrl={\r\n              imageUrl\r\n                ? `https://image.tmdb.org/t/p/original${imageUrl}`\r\n                : require(\"assets/noPosterSmall.png\")\r\n            }\r\n          />\r\n          <Rating>\r\n            <span role=\"img\" aria-label=\"rating\">\r\n              ★\r\n            </span>\r\n            {\"\"}\r\n            {rating}/10\r\n          </Rating>\r\n        </ImageContainer>\r\n        <Title>\r\n          {title.length > 11 ? `${title.substring(0, 11)}...` : title}\r\n        </Title>\r\n        <Year>{year}</Year>\r\n      </Container>\r\n    </Link>\r\n  );\r\n};\r\n\r\nPoster.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool,\r\n};\r\n\r\nexport default Poster;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Common/Section\";\r\nimport Loader from \"Components/Common/Loader\";\r\nimport Message from \"Components/Common/Message\";\r\nimport Poster from \"Components/Common/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 10px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => {\r\n  return loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading... | DSflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Movies | DSflix</title>\r\n      </Helmet>\r\n      {nowPlaying && nowPlaying.length > 0 && (\r\n        <Section title=\"Now Playing\">\r\n          {nowPlaying.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {upcoming && upcoming.length > 0 && (\r\n        <Section title=\"Up Coming\">\r\n          {upcoming.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular\">\r\n          {popular.map((movie) => (\r\n            <Poster\r\n              key={movie.id}\r\n              id={movie.id}\r\n              imageUrl={movie.poster_path}\r\n              title={movie.title}\r\n              rating={movie.vote_average}\r\n              year={movie.release_date && movie.release_date.substring(0, 4)}\r\n              isMovie={true}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message text={error} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nHomePresenter.propTypes = {\r\n  nowPlaying: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  upcoming: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default HomePresenter;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n  params: { api_key: \"248a52d680518fd97f6e7be12c21157d\", language: \"ko\" },\r\n});\r\n\r\n//language: \"en-US\"\r\n\r\nexport const movieApi = {\r\n  nowPlaying: () => api.get(\"movie/now_playing\"),\r\n  upcoming: () => api.get(\"movie/upcoming\"),\r\n  popular: () => api.get(\"movie/popular\"),\r\n  movieDetail: async id => {\r\n    return await api.get(`movie/${id}`, {\r\n      params: { append_to_response: \"videos\" },\r\n    });\r\n  },\r\n  search: async term => {\r\n    return await api.get(\"search/movie\", {\r\n      params: { query: encodeURIComponent(term) },\r\n    });\r\n  },\r\n};\r\n\r\nexport const tvApi = {\r\n  topRated: () => api.get(\"tv/top_rated\"),\r\n  popular: () => api.get(\"tv/popular\"),\r\n  airingToday: () => api.get(\"tv/airing_today\"),\r\n  tvDetail: id =>\r\n    api.get(`tv/${id}`, { params: { append_to_response: \"videos\" } }),\r\n  search: async term => {\r\n    return await api.get(\"search/tv\", {\r\n      params: { query: encodeURIComponent(term) },\r\n    });\r\n  },\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport HomePresenter from \"./HomePresenter\";\r\nimport * as Api from \"../../lib/api\";\r\n\r\nexport default () => {\r\n  const [nowPlaying, setNowPlaying] = useState(null);\r\n  const [popular, setPopular] = useState(null);\r\n  const [upcoming, setUpcoming] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      try {\r\n        const {\r\n          data: { results: nowplaying },\r\n        } = await Api.movieApi.nowPlaying();\r\n        setNowPlaying(nowplaying);\r\n        console.log(nowplaying);\r\n        const {\r\n          data: { results: popular },\r\n        } = await Api.movieApi.popular();\r\n        setPopular(popular);\r\n        console.log(popular);\r\n        const {\r\n          data: { results: upcoming },\r\n        } = await Api.movieApi.upcoming();\r\n        setUpcoming(upcoming);\r\n        console.log(upcoming);\r\n      } catch (error) {\r\n        setError(\"영화정보를 불러올 수 없습니다.\");\r\n      }\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <HomePresenter\r\n      nowPlaying={nowPlaying}\r\n      popular={popular}\r\n      upcoming={upcoming}\r\n      loading={loading}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport HomeContainer from \"./HomeContainer\";\r\n\r\nconst index = () => {\r\n  return <HomeContainer />;\r\n};\r\n\r\nexport default index;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Common/Section\";\r\nimport Loader from \"Components/Common/Loader\";\r\nimport Message from \"Components/Common/Message\";\r\nimport Poster from \"Components/Common/Poster\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  error,\r\n  handleSubmit,\r\n  searchTerm,\r\n  updateTerm,\r\n}) => {\r\n  return (\r\n    <Container>\r\n      <Helmet>\r\n        <title>Search | DSflix</title>\r\n      </Helmet>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Input\r\n          placeholder=\"Search Movies or TV Show!\"\r\n          value={searchTerm}\r\n          onChange={updateTerm}\r\n        />\r\n      </Form>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <>\r\n          {movieResults && movieResults.length > 0 && (\r\n            <Section title=\"Movie Results\">\r\n              {movieResults.map((movie) => (\r\n                <Poster\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.original_title}\r\n                  rating={movie.vote_average}\r\n                  year={\r\n                    movie.release_date && movie.release_date.substring(0, 4)\r\n                  }\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {tvResults && tvResults.length > 0 && (\r\n            <Section title=\"Show Results\">\r\n              {tvResults.map((show) => (\r\n                <Poster\r\n                  id={show.id}\r\n                  imageUrl={show.poster_path}\r\n                  title={show.original_title}\r\n                  rating={show.vote_average}\r\n                  year={\r\n                    show.first_air_date && show.first_air_date.substring(0, 4)\r\n                  }\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message text={error} color={\"#e74c3c\"} />}\r\n          {movieResults &&\r\n            tvResults &&\r\n            movieResults.length === 0 &&\r\n            tvResults.length === 0 && (\r\n              <Message text={\"Not Found\"} color={\"#bdc3c7\"} />\r\n            )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  searchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import React, { useState } from \"react\";\r\nimport SearchPresenter from \"./SearchPresenter\";\r\nimport * as Api from \"../../lib/api\";\r\nimport { useCallback } from \"react\";\r\n\r\nexport default () => {\r\n  const [movieResults, setMovieResults] = useState(null);\r\n  const [tvResults, setTvResults] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (searchTerm !== (\"\" || undefined)) {\r\n      setSearchTerm(e.target.value);\r\n      searchByTerm();\r\n    }\r\n  };\r\n\r\n  const searchByTerm = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      const {\r\n        data: { results: movieResult },\r\n      } = await Api.movieApi.search(searchTerm);\r\n      console.log(\"movie\", movieResult);\r\n      setMovieResults(movieResult);\r\n\r\n      const {\r\n        data: { results: tvResult },\r\n      } = await Api.tvApi.search(searchTerm);\r\n      console.log(\"show\", tvResult);\r\n      setTvResults(tvResult);\r\n    } catch (error) {\r\n      setError(\"해당 정보를 찾지 못했습니다.\");\r\n    }\r\n    setLoading(false);\r\n  }, [searchTerm]);\r\n\r\n  const updateTerm = useCallback((event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setSearchTerm(value);\r\n  }, []);\r\n\r\n  return (\r\n    <SearchPresenter\r\n      movieResults={movieResults}\r\n      tvResults={tvResults}\r\n      handleSubmit={handleSubmit}\r\n      updateTerm={updateTerm}\r\n      loading={loading}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport SearchContainer from \"./SearchContainer\";\r\n\r\nconst index = () => {\r\n  return <SearchContainer />;\r\n};\r\n\r\nexport default index;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Section from \"Components/Common/Section\";\r\nimport Message from \"Components/Common/Message\";\r\nimport Poster from \"Components/Common/Poster\";\r\nimport Loader from \"Components/Common/Loader\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 10px;\r\n`;\r\n\r\nconst TvPresenter = ({ topRated, popular, airingToday, loading, error }) => {\r\n  return loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading... | DSflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : error ? (\r\n    <Message text={error} color={\"red\"} />\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>TV Show | DSflix</title>\r\n      </Helmet>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"Top Rated\">\r\n          {topRated.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path}\r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"Airing Today\">\r\n          {airingToday.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path}\r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular\">\r\n          {popular.map((show) => (\r\n            <Poster\r\n              key={show.id}\r\n              id={show.id}\r\n              imageUrl={show.poster_path}\r\n              title={show.original_name}\r\n              rating={show.vote_average}\r\n              year={show.first_air_date && show.first_air_date.substring(0, 4)}\r\n            />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message text={error} color={\"#e74c3c\"} />}\r\n    </Container>\r\n  );\r\n};\r\n\r\nTvPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n};\r\n\r\nexport default TvPresenter;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport TvPresenter from \"./TvPresenter\";\r\nimport * as Api from \"../../lib/api\";\r\n\r\nexport default () => {\r\n  const [topRated, setTopRated] = useState(null);\r\n  const [popular, setPopular] = useState(null);\r\n  const [airingToday, setAiringToday] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      setLoading(true);\r\n      try {\r\n        const {\r\n          data: { results: topRated },\r\n        } = await Api.tvApi.topRated();\r\n        setTopRated(topRated);\r\n        console.log(topRated);\r\n        const {\r\n          data: { results: popular },\r\n        } = await Api.tvApi.popular();\r\n        setPopular(popular);\r\n        console.log(popular);\r\n        const {\r\n          data: { results: airingToday },\r\n        } = await Api.tvApi.airingToday();\r\n        setAiringToday(airingToday);\r\n        console.log(airingToday);\r\n      } catch (error) {\r\n        setError(\"TV정보를 불러올 수 없습니다.\");\r\n      }\r\n      setLoading(false);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  return (\r\n    <TvPresenter\r\n      topRated={topRated}\r\n      popular={popular}\r\n      airingToday={airingToday}\r\n      loading={loading}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport TvContainer from \"./TvContainer\";\r\n\r\nconst index = () => {\r\n  return <TvContainer />;\r\n};\r\n\r\nexport default index;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Helmet from \"react-helmet\";\r\nimport Loader from \"Components/Common/Loader\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  width: calc(100% - 50px);\r\n  height: 100%;\r\n  background-image: url(${(props) => props.Bgimg});\r\n  background-size: cover;\r\n  background-position: center;\r\n  filter: blur(3px);\r\n  opacity: 0.5;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  height: 100%;\r\n  position: relative;\r\n  z-index: 1;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${(props) => props.Bgimg});\r\n  background-size: cover;\r\n  background-position: center;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n  width: 70%;\r\n  margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 40px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst ItemContainer = styled.div`\r\n  font-size: 13px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Item = styled.span`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst Divider = styled.span`\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\n  font-size: 12px;\r\n  opacity: 0.7;\r\n  width: 50%;\r\n  line-height: 2;\r\n`;\r\n\r\nconst DetailPresenter = ({ result, error, loading }) => {\r\n  return loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading... | DSflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n      <Helmet>\r\n        <title>{result.title ? result.title : result.name} | DSflix</title>\r\n      </Helmet>\r\n      <Backdrop\r\n        Bgimg={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          Bgimg={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title>{result.title ? result.title : result.name}</Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>ㆍ</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]}min\r\n            </Item>\r\n            <Divider>ㆍ</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `,\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n};\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  error: PropTypes.string,\r\n  loading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport DetailPresenter from \"./DetailPresenter\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport * as Api from \"../../lib/api\";\r\n\r\nexport default withRouter(({ history, location, match }) => {\r\n  const { id } = match.params;\r\n  const { push } = history;\r\n  const { pathname } = location;\r\n\r\n  const [result, setResult] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const setData = useCallback(async () => {\r\n    console.log(\"111\");\r\n    try {\r\n      console.log(\"222\");\r\n      setLoading(true);\r\n      if (pathname.includes(\"/movie/\")) {\r\n        console.log(\"333\");\r\n        const { data: movieDetail } = await Api.movieApi.movieDetail(id);\r\n        setResult(movieDetail);\r\n        console.log(\"444\");\r\n      } else if (pathname.includes(\"/show/\")) {\r\n        console.log(\"555\");\r\n        const { data: showDetail } = await Api.tvApi.tvDetail(id);\r\n        setResult(showDetail);\r\n        console.log(\"666\");\r\n      }\r\n    } catch (error) {\r\n      console.log(\"999\");\r\n      setError(\"존재하지 않는 정보입니다.\");\r\n    }\r\n    setLoading(false);\r\n  }, [id, pathname]);\r\n\r\n  useEffect(() => {\r\n    if (isNaN(parseInt(id))) {\r\n      push(\"/\");\r\n    }\r\n    if (result === null) {\r\n      setData();\r\n    }\r\n  }, [id, push, result, setData]);\r\n\r\n  return <DetailPresenter result={result} error={error} loading={loading} />;\r\n});\r\n","import React from \"react\";\r\nimport DetailContainer from \"./DetailContainer\";\r\n\r\nconst index = () => {\r\n  return <DetailContainer />;\r\n};\r\n\r\nexport default index;\r\n","import React from \"react\";\r\nimport { Route, Redirect, Switch } from \"react-router-dom\";\r\nimport Home from \"Routes/Home\";\r\nimport Search from \"Routes/Search\";\r\nimport TV from \"Routes/TV\";\r\nimport Detail from \"Routes/Detail\";\r\n\r\nexport default () => {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route exact path=\"/show\" component={TV} />\r\n      <Route exact path=\"/search\" component={Search} />\r\n      <Route exact path=\"/movie/:id\" component={Detail} />\r\n      <Route exact path=\"/show/:id\" component={Detail} />\r\n      <Redirect from=\"*\" to=\"/\" />\r\n    </Switch>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Header = styled.header`\r\n  color: white;\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 0px 10px;\r\n  /*background-color: rgba(20, 20, 20, 0.6);*/\r\n  background-color: black;\r\n  z-index: 2;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 3px solid\r\n    ${(props) => (props.current ? \"#c0392b\" : \"transparent\")};\r\n  transition: border-bottom 0.5s ease-in-out;\r\n`;\r\n\r\nconst StyledLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport default withRouter(({ location: { pathname } }) => (\r\n  <Header>\r\n    <List>\r\n      <Item current={pathname === \"/\"}>\r\n        <StyledLink to=\"/\">Home</StyledLink>\r\n      </Item>\r\n      <Item current={pathname === \"/show\"}>\r\n        <StyledLink to=\"/show\">TV</StyledLink>\r\n      </Item>\r\n      <Item current={pathname === \"/search\"}>\r\n        <StyledLink to=\"/search\">Search</StyledLink>\r\n      </Item>\r\n    </List>\r\n  </Header>\r\n));\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport reset from \"styled-reset\";\r\n\r\nconst globalStyles = createGlobalStyle`\r\n${reset};\r\na{\r\n    text-decoration:none;\r\n    color:inherit;\r\n}\r\n*{\r\n    box-sizing:border-box;\r\n}\r\nbody{\r\n    font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n    font-size:12px;\r\n    background-color:rgba(20,20,20,1);\r\n    color:white;\r\n    padding-top:50px;\r\n}\r\n`;\r\n\r\nexport default globalStyles;\r\n","import React from \"react\";\nimport Router from \"Components/Router\";\nimport Header from \"Components/Common/Header\";\nimport GlobalStyles from \"Components/Common/GlobalStyles\";\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <Router />\n      <GlobalStyles />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"Components/App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </BrowserRouter>,\n  document.getElementById(\"root\"),\n);\n"],"sourceRoot":""}